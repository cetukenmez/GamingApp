@model GamingApp.Entity.Game
@{
    int ORG_ID = 0;
    if (ViewData["ORG_ID"] != null)
    {
        ORG_ID = Convert.ToInt32(ViewData["ORG_ID"]);
    }

    int SESSION_ID = 0;
    if (ViewData["SESSION_ID"] != null)
    {
        SESSION_ID = Convert.ToInt32(ViewData["SESSION_ID"]);
    }

    string SESSION_NAME = "";
    if (ViewData["SESSION_NAME"] != null)
    {
        SESSION_NAME = ViewData["SESSION_NAME"].ToString();
    }

    string SESSION_TIME = "";
    if (ViewData["SESSION_TIME"] != null)
    {
        SESSION_TIME = ViewData["SESSION_TIME"].ToString().Replace('.' , '/');
    }



    ViewBag.Title = "ALIŞVERİŞLERRRRRR";
}

<div style="margin-bottom:10px" class="row">
    @{
        if (SESSION_NAME.Length > 0)
        {
        <div style="margin-left:auto" id="countdown_container">
            <strong >@SESSION_NAME. Seans Açık  </strong>
            <div id="countdown_timer"></div>
            <div style="clear:both"></div>
        </div>
        }
    }

    <div class="dropdown" style="float:right;margin-left:auto;margin-right:15px">
        <button onclick="myFunction()" class="dropbtn">+</button>
        <div id="myDropdown" class="dropdown-content">
            @{


                if (SESSION_ID > 0)
                {
                    <a data-toggle="modal" data-target="/Home/SeansBitir/@Convert.ToInt32(SESSION_ID)" class="view" href="#">Seansı Bitir</a>
                }
                else if (!Model.GameClosed && SESSION_ID < 1)
                {
                    <a href="~/Home/YeniSession/@Convert.ToInt32(ORG_ID)">Yeni Seans Ekle</a>
                    <a href="~/Home/KullaniciEkle/@Convert.ToInt32(ORG_ID)">Kullanıcı Ekle</a>
                    <a onclick="OyunuBitir(@Convert.ToInt32(ORG_ID))" href="#">Oyunu Sonlandır</a>

                }

                <a onclick="hesapla(@Convert.ToInt32(ORG_ID))" href="#">Alternatif Hesapla</a>
                <a onclick="hesabiPaylas(@Convert.ToInt32(ORG_ID))" href="#">Hesabı Herkese Göster</a>
                <a href="~/Home/LogsByGame/@Convert.ToInt32(ORG_ID)">Oyunun Loglarını Gör</a>
                <a href="~/Home/AdminDegistir/@Convert.ToInt32(ORG_ID)">Oyunun Adminini Değiştir</a>
            }

        </div>
    </div>

</div>

<div id="TumHarcama" class="">
    <table class="table table-striped table-bordered" id="genelTable" style="font-size: 12px;">
        <thead>
            <tr>
                <th>Adı</th>
                @{
                    foreach (var item in Model.Session)
                    {
                        <th>@item.SessionName. Seans</th>
                    }
                }
                <th>Toplam</th>
            </tr>
        </thead>
        <tbody>
            @{foreach (var item in Model.GameUser)
                {

                    <tr style="cursor:pointer;" data-toggle="@(SESSION_ID > 0 ? "modal" : "")" @*data-toggle="modal"*@ data-target="/Home/HarcamaEkle?UserId=@item.UserId&SessionId=@SESSION_ID" class="@(SESSION_ID > 0 ? "view" : "")">

                        <td>@item.User.UserNameSurname</td>

                        @foreach (var su in Model.Session)
                        {
                            foreach (var items in su.SessionUser)
                            {
                                if (items.SessionId == su.SessionId && item.UserId == items.UserId)
                                {
                                    if (su.SessionClosed)
                                    {
                                        <td class="cash">@items.TotalCash.ToString("0.##")</td>
                                    }
                                    else
                                    {
                                        <td class="cash">@items.Cash.ToString("0.##")</td>
                                    }

                                }
                            }

                        }
                        <td class="total" id="total"></td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>


<div class="modal fade" id="modelView" tabindex="-1" role="dialog" aria-labelledby="">
    <div class="modal-dialog" role="document" style="max-width:850px !important">
        <div class=" modal-content col-xs-5 col-sm-5 col-md-12 col-lg-12">
            <div class="modal-header">
                <h4 class="modal-title pull-left" id="myModalLabel">Harcama Detay</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">x</span></button>
            </div>
            <form method="post">
                <div class="modal-body">

                </div>
                <div class="modal-footer">

                </div>
            </form>
        </div>
    </div>
</div>

<style>

    #countdown_container {
        border-radius: 2px;
        text-align: center;
        font-weight: bold;
        border: 5px dashed #ffffff;
        display: inline-block;
        padding: 0 5px;
    }

    #countdown_timer > div {
        float: left;
/*        padding: 15px 20px;
*/        margin: 10px 5px;
        text-align: center;
        border-radius: 4px;
    }

        #countdown_timer > div > div:first-child {
            font-size: 28px;
            //color:#ff6000; /*black theme*/
            color: #0ab306; /*white theme*/
            text-shadow: 0px 1px 0px #056d03; /*white theme*/
        }

        #countdown_timer > div > div:last-child {
            text-transform: capitalize;
            font-size: 14px;
            //color:#fff; /*black theme*/
            color: #444; /*white theme*/
        }


    .dropbtn {
        background-color: gray;
        color: white;
        font-size: 16px;
        border: none;
        margin: 0 5px;
        padding: 2px 8px;
        cursor: pointer !important;
    }

        .dropbtn:hover, .dropbtn:focus {
            background-color: #2980B9;
        }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        left: -230px;
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: 260px;
        overflow: auto;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

    .dropdown a:hover {
        background-color: #ddd;
    }

    .show {
        display: block;
    }
</style>

<script type="text/javascript">
    debugger;
    var countDownDate = new Date("@SESSION_TIME").getTime(); //geri sayılacak ileri zamanki bir tarihi milisaniye cinsinden elde ediyoruz
    var dayText = "Gün";
    var hourText = "Saat";
    var minuteText = "Dakika";
    var secondText = "Saniye";
    if (countDownDate) { //tarih var ise
        var x = setInterval(function () { //sayacı belirli aralıklarla yenile
            var now = new Date().getTime(); //şimdiki zamanı al
            var distance = now - countDownDate ; //geri sayılacak tarih ile şimdiki tarih arasındaki zaman farkını al
            if (distance < 0) { //zaman farkı yok ise belirtilen zamanı geçti
                clearInterval(x); //sayacı sil
                $("#countdown_timer").html("Geri sayım yapılacak ileri bir tarih yoktur");
            } else { //zaman farkı var ise
                //aradaki zaman farkını gün,saat,dakika,saniye olarak böl
                var days = Math.floor(distance / (1000 * 60 * 60 * 24)),
                    hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),
                    minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),
                    seconds = Math.floor((distance % (1000 * 60)) / 1000),
                    days = (days ? '<div><div>' + days + '</div><div>' + dayText + '</div></div>' : ''), //gun varsa gun degerini yaz
                    hours = (hours ? '<div><div>' + hours + '</div><div>' + hourText + '</div></div>' : ''), //saat varsa saat degerini yaz
                    minutes = (minutes ? '<div><div>' + minutes + '</div><div>' + minuteText + '</div></div>' : ''), //dakika varsa dakika degerini yaz
                    seconds = (seconds ? '<div><div>' + seconds + '</div><div>' + secondText + '</div></div>' : ''); //saniye varsa saniye degerini yaz
                document.getElementById("countdown_timer").innerHTML = days + hours + minutes + seconds; //yazdır
            }
        }, 1000); //1 saniyede bir sayaç güncellenecek
    }
</script>

<script>
    /* When the user clicks on the button,
    toggle between hiding and showing the dropdown content */
    function myFunction() {
        document.getElementById("myDropdown").classList.toggle("show");
    }

    $("#target").click(function () {
        document.getElementById("myDropdown").classList.toggle("show");
    });

    // Close the dropdown if the user clicks outside of it
    window.onclick = function (event) {
        if (!event.target.matches('.dropbtn')) {
            var dropdowns = document.getElementsByClassName("dropdown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
        }
    }

    function hesapla(id) {

        var url = "@Url.Action("Hesapla", "Home")";
        var parameters = {
            id: id
        };
        $.post(url, parameters, function (data) {

            if (data.sonuc_kod == 0) {
                alerts.HataAlert("Hata", data.sonuc_mesaj  );
            }
            else {
                alerts.BasariliAlert("Bilgilendirme", data.sonuc_mesaj);
            }
        });
    }

    function OyunuBitir(id) {

        var url = "@Url.Action("OyunuBitir", "Home")";
        var parameters = {
            id: id
        };
        $.post(url, parameters, function (data) {

            if (data.sonuc_kod == 0) {
                alerts.HataAlert("Hata", data.sonuc_mesaj  );
            }
            else {
            }
        });

    }

    function hesabiPaylas(id) {

        var url = "@Url.Action("HesapPaylas", "Home")";
        var parameters = {
            id: id
        };
        $.post(url, parameters, function (data) {

            if (data.sonuc_kod == 0) {
                alerts.HataAlert("Hata", data.sonuc_mesaj  );
            }
            else {
            }
        });

    }

    function harcamaKaydet(id) {

        var harcama = $("#neKadarAldi").val();
        var url = "@Url.Action("HarcamaKaydet", "Home")";
        var parameters = {
            id: id,
            harcama: harcama
        };
        $.post(url, parameters, function (data) {

            if (data.sonuc_kod == 0) {
                alerts.HataAlert("Hata", data.sonuc_mesaj);
            }
            else {
                alerts.BasariliAlert("Bilgilendirme", data.sonuc_mesaj);
                location.reload();
            }
        });
    }


    function fSecilenUrunleriGetir() {
        var vDizi = [];
        $(".satir")
            .each(function () {
                    vDizi.push({
                        SESSIONUSERID: $(this).find("input").attr('data-suid'),
                        ARTITUTARI: $(this).find(".artilar").val()
                    });
            });
        return vDizi;
    }

    function seansBitir() {
        var toplamAlinan = $("#toplamAlinan").val();
        var sessionId = $("#sessionId").val();
        var toplamArtilar = 0;
        $(".artilar").each(function () {
            var currentRow = parseFloat($(this).val().replace(',', '.'));
            if (currentRow.length !== 0) {
                toplamArtilar += parseFloat(currentRow);
            }
        });


        if (toplamArtilar == toplamAlinan) {
             alerts.OnayAlert("Seansı Bitirmek Üzeresiniz", "", function () {
            var url = "@Url.Action("SeansKapatBitir", "Home")";
            var parameters = {
                UrunList: fSecilenUrunleriGetir(),
                SessionId: sessionId
            };
            $.post(url, parameters, function (data) {

                if (data.sonuc_kod == 0) {
                    alerts.HataAlert("Hata", data.sonuc_mesaj);
                }
                else {
                    location.reload();
                }
            })
        });
        }
        else {
            alerts.HataAlert("Hesap TUTMUYOR !!!", "Toplam Alınan Çip Tutarı : " + toplamAlinan + " TL <br/><br/> Toplam Artıda Olanlar :  " + toplamArtilar + " TL");
        }


        @*$(this).find("#total").text(toplamArtilar + " TL");



        var url = "@Url.Action("HarcamaKaydet", "Home")";
        var parameters = {
            id: id,
            harcama: harcama
        };
        $.post(url, parameters, function (data) {

            if (data.sonuc_kod == 0) {
                alerts.HataAlert("Hata", data.sonuc_mesaj);
            }
            else {
                alerts.BasariliAlert("Bilgilendirme", data.sonuc_mesaj);
                location.reload();
            }
        });*@
    }

    $(function () {


        @*alert("mevcut seans = " + "@SESSION_ID");*@


        $("tr").each(function () {
            var TotalValue = 0.0;
            $(this).find(".cash").each(function () {
                var currentRow = parseFloat($(this).text().replace(',' , '.'));
                if (currentRow.length !== 0) {
                    TotalValue += parseFloat(currentRow);
                }
            });
            $(this).find("#total").text(TotalValue + " TL");
        });


        $('.cash').filter(function () {
            return parseFloat($(this).text()) > 0
        }).css('color', 'green');

        $('.cash').filter(function () {
            return parseFloat($(this).text()) < 0
        }).css('color', 'red');

        $('.total').filter(function () {
            return parseFloat($(this).text()) > 0
        }).css('color', 'green');

        $('.total').filter(function () {
            return parseFloat($(this).text()) < 0
        }).css('color', 'red');
    });
</script>

<script>
    $(function () {
        // a tagimizde bulunan .view classımıza click olduğunda
        $("body").on("click", ".view", function () {
            onLoading();
            var url = $(this).data("target");
            //bu urlimizi post et
            $.post(url, function (data) { })
                //eğer işlemimiz başarılı bir şekilde gerçekleşirse
                .done(function (data) {
                    //gelen datayı .modal-body mizin içerise html olarak ekle
                    $("#modelView .modal-body").html(data);
                    //sonra da modalimizi göster
                    $("#modelView").modal("show");
                    setTimeout(onComplete, 1000);

                })
                //eğer işlem başarısız olursa
                .fail(function () {
                    //modalımızın bodysine Error! yaz
                    $("#modelView .modal-body").text("Error!!");
                    //sonra da modalimizi göster
                    $("#modelView").modal("show");
                    setTimeout(onComplete, 1000);

                })

        });
    })
</script>

<script type="text/javascript">

    $(document).ready(() => {
        var base_url = window.location.origin;
        var connection = new signalR.HubConnectionBuilder().withUrl(base_url + "/MyHub").build();
        // alerts.BasariliInfo(connection.connectionState, true);
        
        $("#conStatus").text(connection.connectionState);

        connection.start().then(() => {
            $("#conStatus").text(connection.connectionState);
            
            alerts.BasariliInfo(connection.connectionState, true);
            // startInvoke();
        }).catch((err) => {
            
            console.log(err)
        });

        connection.on("ReceiveMasaOrderCount", (games) => {
            
            //$("#gamelist").append("<tr>" + "<td>" + games.gelirGiderAciklama + "</td>" + "<td>" + games.gelirGiderTutar + "</td>" + "<td>" + games.gelirGiderTuruId + "</td>" + "<td>" + games.hesapId + "</td>" + "<td>" + games.subeId + "</td>" + "<td>" + games.gelirGiderTarihi + "</td>" + "<td>" + "<a href='/GelirGider/Edit/" + games.gelirGiderId + "'>Edit</a> | <a href='/GelirGider/Details/" + games.gelirGiderId + "'>Details</a> |<a href='/GelirGider/Delete/" + games.gelirGiderId + "'>Delete</a>" + "</td>" + "</tr>" );
            my_function();
            //alert(list);
            //this.refreshList();
        });


        connection.on("ReceiveMasaOrderCounts", (games) => {

            //$("#gamelist").append("<tr>" + "<td>" + games.gelirGiderAciklama + "</td>" + "<td>" + games.gelirGiderTutar + "</td>" + "<td>" + games.gelirGiderTuruId + "</td>" + "<td>" + games.hesapId + "</td>" + "<td>" + games.subeId + "</td>" + "<td>" + games.gelirGiderTarihi + "</td>" + "<td>" + "<a href='/GelirGider/Edit/" + games.gelirGiderId + "'>Edit</a> | <a href='/GelirGider/Details/" + games.gelirGiderId + "'>Details</a> |<a href='/GelirGider/Delete/" + games.gelirGiderId + "'>Delete</a>" + "</td>" + "</tr>" );
            hesapla("@ORG_ID");
            //alert(list);
            //this.refreshList();
        });

        function startInvoke() {
            connection.invoke("GetMasaOrderCountHub").catch((err) => console.log(err))
        }


    })

    function my_function() {
        location.reload();
    }

</script>